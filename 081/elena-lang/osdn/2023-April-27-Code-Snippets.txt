== ELENA コードスニペット

{{{ code ruby

    //************************************************************************

    //* コンソール:                                                                                                   *

    //************************************************************************

    console.write: "Hello World";      // コンソールへ文字列を表示

    console.writeLine: "Hello World";  // コンソールへ改行付き文字列を表示 

    

    //*************************************************************************

    //* 代入:                                                                                                                 *

    //*************************************************************************

    var x := 4;                        // 新規変数

    x := 5;                              // 代入

    x := new Object();         // クラスのインスタンスを割り当て

    

    //************************************************************************

    //* 定数:                                                                                                               *

    //************************************************************************

    var b := true;                     // true 定数

    b := false;                        // false 定数

    b := nil;                          // nil オブジェクト定数

    x := 1;                            // 整数定数

    x := 3.14r;                        // 浮動小数点数定数

    x := -1;                           // 負数定数

    x := "Hello";                      // 文字列定数

    x := "I""m here";                  // シングルクォート定数

    x := new int[] {3, 2, 1};          // 配列定数

    x := new object[]{"abc", 2, 2.3r}; // 混成型にも対応

    

    //************************************************************************

    //* ブール評価:                                                                                                   *

    //************************************************************************

    x := 1;

    var y := 2;

    b := (x == y);                     // 等しい

    b := (x != y);                     // 等しくはない

    b := (x.equalReference(y));        // 等しい

    b := (x > y);                      // より小さい

    b := (x < y);                      // より大きい

    b := (x >= y);                     // より小さいか等しい

    b := (x <= y);                     // より大きいか等しい

    b := b.Inverted;                   // ブール not

    b := (x < 5).and(y > 1);           // ブール and

    b := (x < 5).or(y > 1);            // ブール or

    b := (x < 5) && (y > 1);           // ブール and (短絡評価)

    b := (x < 5) || (y > 1);           //  ブール or (短絡評価)

    b := (x < 5).xor(y > 1);           // test if one true and other false

    

    //************************************************************************

    //* 算術演算式:                                                                                                   *

    //************************************************************************

    x := 0;

    x := 6 + 3;                       // 加算

    x := 6 - 3;                        // 減算

    x := 6 * 3;                        // 乗算

    x := 5 / 3;                        // 整数の除算

    x := 5.mod:3;                 // 整数の余剰

    x := 5.realDiv:3;            // 浮動小数点数での除算結果

    x := -5;                           // 単項負数

    x := 5.Negative;           // 受信側の符号反転

    x := 6 * 3.1r;                // 浮動小数点数型へ自動変換

    x := 5.power:2;          // 指数関数

    

    //************************************************************************

    //* ビット演算:                                                                                                   *

    //************************************************************************

    x := 0;

    x := 0FFh.and: 0Fh;                // and ビット演算

    x := 0F0h.or: 0Fh;                 // or ビット演算

    x := 0FFh.xor: 0Fh;                // xor ビット演算

    x := 0FFh.Inverted;                // ビット反転演算

    x := 0Fh.shiftLeft:-4;             // 左シフト演算

    x := 0F0h.shiftRight:4;              // 右シフト演算

    b := 0FFh.allMask:0Fh;             // 受信側でマスクビットがすべて設定されているかのテスト

    b := 0FFh.anyMask:0Fh;          // 受信側でマスクビットのいずれかが設定されているかのテスト

}}}

----

この記事は [https://github.com/ELENA-LANG/elena-lang/wiki/ELENA-Code-Snippets ELENA Code Snippets (2023-April-24 rev. 9)] の邦訳です。

使用許諾条件は ELENA 言語に従うものとします。

