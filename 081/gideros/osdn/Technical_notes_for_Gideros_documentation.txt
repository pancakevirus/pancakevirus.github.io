== はじめに

ここでは、 Gideros の取り扱い説明書を翻訳・校正する上での注意事項を述べます。

正直、苦言を申しますと、 Gideros の添付ドキュメントは品質が悪いです。記述抜けが多数ありますし、査読や検証も十分に成されていない感じがします。いくら[http://giderosmobile.com/guide チュートリアル]があるとはいえ、添付ドキュメントは、なにかあったら真っ先に参照する一次情報です。 ですから、最低でも love2d wiki くらいの水準が必要だと思いますが...。

執筆中です。

== なんで翻訳するのか？

オープンソースソフトウェアに添付されているドキュメントの品質を改善するためです。

経験上、翻訳されることを前提としたドキュメントと、そうでないドキュメントを比較した場合、前者の方が品質が高く成りやすく、誤字脱字の修正や品質の改善が期待できます。

翻訳というのは高額なものです(三百ページ程度の原稿でも、まともなプロに依頼すると数十万。書籍として一般に流通させる品質となると総額で[http://www.chukoji.co.jp/jihi/jihi02.html 数百万円]になります)。ですから、その分を寄付扱いとして負担する意味もあります (ですから、口癖のように翻訳はただじゃねーぞと言うんです)。

オープンソースの開発者にもいろいろありますが、翻訳されて広く使われることで辛い開発作業を乗り切る活力を得ることができます。ひいては好循環をもたらし続ける結果となると思います。

== HTML版

=== ドキュメントの破綻

HTML形式での最新版ドキュメントですが、ソースコード版には収録されていません (付属しているのは二年以上前！)。

なぜか、Windows/macOS のインストールパッケージへの収録、およびオンラインドキュメントに限り公開されています。また、ドキュメントのビルドシステムは非公開 (xml形式...かなり厄介) なので、ビルド環境を構築してからソースコード版だけダウンロードしても通信容量節約になりません (両方で 1GB 必要...うーん)。

対策として、 HTML 版をあきらめることです。まずソースコード版の docsrc には最新版のドキュメントソースコードが収録されています。これをなんとかして、 reSt, odt などへ変換することが考えられます。

そもそも HTML版は、時代に合っていない (全文検索ができない)、使いづらい (love2d wiki のようなわかりやすい構造ではない)、ドキュメントビルドシステムが一般的ではない (複数種のフォーマットを吐けない、翻訳されることを考えていない) などの問題があり、 Gideros の普及を妨げる要因の一つと成っているのではと思います。

=== バグの修正 その１

(負)等号記号が誤ってエスケープされてしまい、正常にページが表示されない不具合があります。

これは、 Documentation フォルダ配下にある html ファイル全体に対して grep を適用することで修正できます (処理前にバックアップしてください)。

|| '''修正前''' || '''修正後''' ||

|| &lt;ul&gt; || <ul> ||

|| &lt;/ul&gt; || </ul> ||

|| &lt;li&gt; || <li> ||

|| &lt;/li&gt; || </li> ||

|| &lt;code&gt; || <code> ||

|| &lt;/code&gt; || </code> ||

|| &lt;pre&gt; || <pre> ||

|| &lt;/pre&gt; || </pre> ||

|| &amp;quot; || &quot; ||

なぜ、これを放置したままなのか、理解に苦しみます。

バイナリ版のビルドスクリプトに仕込んでおくだけで済む問題ですし、処理時間も数分程度です。

== XML 版のビルド方法

まず、XML 変換ツールが必要ですが、あまりいいのがありません。また  XMLスタイルシートは添付されていないので、自分で用意する必要がありますので...なので、JSON へ変換した方が楽なようです。

=== XML 変換器の一例

 * [https://www.xml-converter.de/ XML Conveter]

 2008年から開発されているフリーソフトウェアの xml → html/csv/docx 変換器。

 独自スクリプト言語を書いて XML から別のフォーマットへ変換します。

 サイトとドキュメントはドイツ語なので読めないとキツいかもしれません。

== サイト構成

始めてから気づいたのですが、 OSDN の場合は、 Wiki の機能は必要最低限です。用途やクラスごとに作業部屋を分けた方が良いかもしれません。

